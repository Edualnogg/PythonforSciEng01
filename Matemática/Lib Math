import math as mt
    
                                                        ## FUNÇÕES BÁSICAS ##

mt.isqrt(x) #Raiz inteira real

mt.pow(x,y) #O primeiro numero elevado ao segundo

mt.factorial(x) #Retorna x fatorial como um inteiro. Levanta ValueError se x não for integral ou for negativo.

mt.lcm(*integers) #MMC dos integers

mt.gcd(*integers) #MDC dos integers

mt.isinf(x) #retorna em bool se o valor é infinito

mt.isfinite(x) #retorna em bool se o valor é finito

mt.trunc(x) #retorna só o número inteiro

mt.isnam(x) #retorna um true se for numero

mt.modf(x) #retorna as partes fracionárias e inteiras da x

mt.nextafter(x, y) #Retorna o próximo valor de ponto flutuante após x em direção a y.

mt.copysign(x, y) #Retorna um ponto flutuante com a magnitude (valor absoluto) de x, mas o sinal de y. Em plataformas que suportam zeros sem sinal, copysign(1.0, -0.0) retorna -1.0.







                                                 ## ANÁLISE COMBINATÓRIA ##

mt.perm(n, k=None) #Retorna o número de maneiras de escolher k itens de n itens sem repetição e com ordem.

mt.comb(n, k) #Retorna o número de maneiras de escolher k itens de n itens sem repetição e sem ordem.




                                                        ## LOGs ##

mt.exp(x) #retorna euler elevado à x (e = 2,71...), é mais preciso

mt.expm1(x) #retorna euler elevado à x, menos 1

mt.log(x[, base]) #Com um argumento, retorna o logaritmo natural de x (para base e).Com dois argumentos, retorna o log normal.

mt.log2(x) #Retorna o logaritmo de base 2 de x. Isso geralmente é mais preciso do que log(x, 2).

mt.log10(x) #Retorna o logaritmo de base 10 de x. Isso geralmente é mais preciso do que log(x, 10).





                                                      ## TRIGONOMETRIA ##

mt.acos(x) #Retorna o arco cosseno de x, em radianos. O resultado está entre 0 e pi

mt.asin(x) #Retorna o arco seno de x, em radianos. O resultado está entre -pi/2 e pi/2.

mt.atan(x) #Retorna o arco tangente de x, em radianos. O resultado está entre -pi/2 e pi/2

mt.atan2(y, x) #Retorna atan(y / x), em radianos. O resultado está entre -pi e pi.

mt.cos(x) #Retorna o cosseno de x radianos.

mt.sin(x) #Retorna o seno de x radianos.

mt.tan(x) #Retorna o tangente de x radianos.

mt.hypot(*coordinates) #Para um ponto bidimensional (x, y), isso é equivalente a calcular a hipotenusa de um triângulo retângulo usando o teorema de Pitágoras.

                                   
    
    
    
    
                                                        ## CONVERSÃO ANGULAR ##

mt.degrees(x) #Converte o ângulo x de radianos para graus.

mt.radians(x) #Converte o ângulo x de graus para radianos.



                                    
    
    
                                                    ## FUNÇÕES HIPERBÓLICAS ##
    

mt.acosh(x) #Retorna o cosseno hiperbólico inverso de x.

mt.asinh(x) #Retorna o seno hiperbólico inverso de x.

mt.atanh(x) #Retorna a tangente hiperbólica inversa de x.

mt.cosh(x) #Retorna o cosseno hiperbólico de x.

mt.sinh(x) #Retorna o seno hiperbólico de x.

mt.tanh(x) #Retorna a tangente hiperbólica de x.
    

    
    
    
                                            ## CONSTANTES ##    
    
mt.pi #A constante matemática π = 3.141592…, para a precisão disponível.

mt.e #A constante matemática e = 2.718281…, para a precisão disponível.    
    
mt.tau #A constante matemática τ = 6.283185…, para a precisão disponível. Tau é uma constante de círculo igual a 2π, a razão entre a circunferência de um círculo e seu raio.

mt.inf #Um infinito positivo de ponto flutuante. (Para infinito negativo, use -math.inf.) Equivalente à saída de float('inf').
